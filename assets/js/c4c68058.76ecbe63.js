"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8774],{7237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Queries/User/viewer","title":"viewer","description":"Description","source":"@site/docs/Queries/User/viewer.md","sourceDirName":"Queries/User","slug":"/Queries/User/viewer","permalink":"/tres-docs/docs/Queries/User/viewer","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Queries/User/viewer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"assetBalance","permalink":"/tres-docs/docs/Queries/Use cases / Examples/assetBalance"}}');var r=t(4848),a=t(8453);const i={},o="viewer",l={},c=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"viewer",children:"viewer"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"Gets information about the currently authenticated user and their organization settings."}),"\n",(0,r.jsx)(n.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"query {\n  viewer: UserQuery\n}\n\ntype UserQuery {\n  id: ID!\n  password: String!\n  lastLogin: DateTime\n  isSuperuser: Boolean!\n  username: String!\n  firstName: String!\n  lastName: String!\n  email: String!\n  isStaff: Boolean!\n  isActive: Boolean!\n  dateJoined: DateTime!\n  orgName: String\n  displayName: String\n  canExecuteCommit: [String]\n  organizationSettings: OrganizationSettingsObjectType\n}\n\nscalar DateTime\n\ntype OrganizationSettingsObjectType {\n  calculateImpairmentForCurrencies: [Currency]!\n  calculateCostBasisForCurrencies: [Currency]!\n  calculateCostBasisByInternalAccount: Boolean!\n  costBasisStrategy: CostBasisStrategy!\n  useNewCostBasis: Boolean!\n  calculateImpairmentForInternalAccounts: Boolean!\n  avoidDeletingOldResults: Boolean!\n  saveResultsInS3: Boolean!\n  saveFullInventory: Boolean!\n  allowShort: Boolean!\n  useExactTimestampForCostBasisReport: Boolean!\n  excludedInternalAccountsIds: [Int]!\n  screenshotEnabled: Boolean!\n  disabledCommitSteps: [String]!\n  bypassPendingTxsCheck: Boolean!\n  disableAutoCommit: Boolean!\n  bypassCleanTxWithNoSubTx: Boolean!\n  bypassSpecialFiatValuesCalculation: Boolean!\n  autoScheduledCommitHours: [Int]!\n  bypassFiatValuesFailedCalculation: Boolean!\n  minLastSyncedAt: DateTime!\n  disablePositions: Boolean!\n  ignoreMethodIdsForInternalTransfers: [String]!\n  ignoreSenderRecipientForInternalTransfers: [String]!\n  doNotStartCommitOnNewAccounts: Boolean!\n  filterAssetsDistributionWidgetGtZero: Boolean!\n  customerTier: CustomerTier!\n  commitPriority: CommitPriority!\n  readinessEnabled: Boolean!\n  storeArchivedBalances: Boolean!\n  hideReconciliation: Boolean!\n  enableHistoricalReport: Boolean!\n  defaultDatetimeFilterEnabled: Boolean!\n  proofOfFunds: ProofOfFundsSettingsObjectType\n  allowInternalAccountCreation: Boolean!\n  displayNotesAsActions: Boolean!\n  showNotesAsAction: Boolean!\n  allowRealtimeNotifications: Boolean!\n  peggedStableCoinsToFiat: [PeggingPairObjectType]!\n  acceptableSwapFiatValueAlignmentRate: Float!\n  useCommentsForErpLineDescription: Boolean!\n  skipCostBasisForAssetClassSymbol: [String]!\n  runErpInvalidate: Boolean!\n  enableApAr: Boolean!\n  showSyncingStatusWidget: Boolean!\n  hideOptionContracts: Boolean!\n  enableCoaMapping: Boolean!\n  refreshTokenOnJob: Boolean!\n  mockIntegrationConnection: Boolean!\n  fetchXeroDepartmentAndEntityTrackingCategories: Boolean!\n  updateOrgStakingData: Boolean!\n  separateUnlockingAndLocked: Boolean!\n  dailyHistoricalReportTargetHour: Int!\n  dailyHistoricalReportGracePeriod: Int!\n  dailyHistoricalReportFormat: ReportOutputFormat!\n}\n\nenum Currency {\n  USD\n  EUR\n  IDR\n  CHF\n  ILS\n  GBP\n  TRY\n  AUD\n  CAD\n  JPY\n  AED\n  NZD\n  SEK\n  CLP\n}\n\nenum CostBasisStrategy {\n  FIFO\n  FIFO_IMPAIRMENT\n  LIFO\n  AVG\n  MAX_GAINS\n  MAX_LOSSES\n}\n\nenum CustomerTier {\n  FREE\n  TRIAL\n  POC\n  IDLE\n  INTERNAL\n}\n\nenum CommitPriority {\n  LOW\n  NORMAL\n  HIGH\n}\n\ntype ProofOfFundsSettingsObjectType {\n  dashboardUrl: String!\n}\n\ntype PeggingPairObjectType {\n  currency: Currency!\n  assetName: String!\n}\n\nenum ReportOutputFormat {\n  XLSX\n  CSV\n  PDF\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"calculateImpairmentForCurrencies"}),(0,r.jsx)(n.td,{children:"[Currency]!"}),(0,r.jsx)(n.td,{children:"List of currencies for impairment calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"calculateCostBasisForCurrencies"}),(0,r.jsx)(n.td,{children:"[Currency]!"}),(0,r.jsx)(n.td,{children:"List of currencies for cost basis calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"calculateCostBasisByInternalAccount"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to calculate cost basis by internal account"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"costBasisStrategy"}),(0,r.jsx)(n.td,{children:"CostBasisStrategy!"}),(0,r.jsx)(n.td,{children:"Strategy used for cost basis calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"useNewCostBasis"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to use new cost basis calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"calculateImpairmentForInternalAccounts"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to calculate impairment for internal accounts"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"avoidDeletingOldResults"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to prevent deletion of old results"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"saveResultsInS3"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to save results in S3"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"saveFullInventory"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to save full inventory"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"allowShort"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to allow short positions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"useExactTimestampForCostBasisReport"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to use exact timestamp for cost basis report"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"excludedInternalAccountsIds"}),(0,r.jsx)(n.td,{children:"[Int]!"}),(0,r.jsx)(n.td,{children:"List of internal account IDs to exclude"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"screenshotEnabled"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to enable screenshots"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"disabledCommitSteps"}),(0,r.jsx)(n.td,{children:"[String]!"}),(0,r.jsx)(n.td,{children:"List of disabled commit steps"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bypassPendingTxsCheck"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to bypass pending transactions check"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"disableAutoCommit"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to disable auto commit"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bypassCleanTxWithNoSubTx"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to bypass clean transactions with no sub-transactions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bypassSpecialFiatValuesCalculation"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to bypass special fiat values calculation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"autoScheduledCommitHours"}),(0,r.jsx)(n.td,{children:"[Int]!"}),(0,r.jsx)(n.td,{children:"List of hours for auto-scheduled commits"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bypassFiatValuesFailedCalculation"}),(0,r.jsx)(n.td,{children:"Boolean!"}),(0,r.jsx)(n.td,{children:"Flag to bypass failed fiat values calculation"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);