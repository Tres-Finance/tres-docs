"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3569],{7266:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Queries/Notification Center/notificationsRuleTemplate","title":"notificationsRuleTemplate","description":"Description","source":"@site/docs/Queries/Notification Center/notificationsRuleTemplate.md","sourceDirName":"Queries/Notification Center","slug":"/Queries/Notification Center/notificationsRuleTemplate","permalink":"/tres-docs/docs/Queries/Notification Center/notificationsRuleTemplate","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Queries/Notification Center/notificationsRuleTemplate.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"notificationRule","permalink":"/tres-docs/docs/Queries/Notification Center/notificationRule"},"next":{"title":"organizationBalance","permalink":"/tres-docs/docs/Queries/Overview/organizationBalance"}}');var r=i(4848),s=i(8453);const o={},c="notificationsRuleTemplate",l={},a=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"notificationsruletemplate",children:"notificationsRuleTemplate"})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Retrieves notification rule templates with their field configurations."}),"\n",(0,r.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:"query {\n  notificationsRuleTemplate: [NotificationRuleTemplateQuery]\n}\n\ntype NotificationRuleTemplateQuery {\n  name: Rule!\n  requiredFields: [String]!\n  optionalFields: [String]!\n  excludeFields: [String]\n}\n\nenum Rule {\n  EXPOSURE_TO_ASSET\n  TX_ACTIVITY\n  FIRST_TX_WITH_ASSET\n  RECONCILIATION\n  NET_WORTH\n  REALIZED_PNL\n  ASSET_CLASS_RATIO_FROM_BALANCE\n  REWARD_POSITION\n  REWARD_CLAIMED\n  REPORT_READY\n  SLASHING_MONITORING\n  COMMIT_COMPLETED\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"name"}),(0,r.jsx)(t.td,{children:"Rule!"}),(0,r.jsx)(t.td,{children:"The notification rule template type"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"requiredFields"}),(0,r.jsx)(t.td,{children:"[String]!"}),(0,r.jsx)(t.td,{children:"List of required fields for the notification rule"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"optionalFields"}),(0,r.jsx)(t.td,{children:"[String]!"}),(0,r.jsx)(t.td,{children:"List of optional fields that can be included in the notification rule"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"excludeFields"}),(0,r.jsx)(t.td,{children:"[String]"}),(0,r.jsx)(t.td,{children:"List of fields to exclude from the notification rule"})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);