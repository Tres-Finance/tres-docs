"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6187],{8453:(n,t,e)=>{e.d(t,{R:()=>a,x:()=>c});var i=e(6540);const r={},s=i.createContext(r);function a(n){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(s.Provider,{value:t},n.children)}},9604:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Mutations/Integrations/syncIntegration","title":"syncIntegration","description":"Description","source":"@site/docs/Mutations/Integrations/syncIntegration.md","sourceDirName":"Mutations/Integrations","slug":"/Mutations/Integrations/syncIntegration","permalink":"/docs/Mutations/Integrations/syncIntegration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"ignoreTransaction","permalink":"/docs/Mutations/Integrations/ignoreTransaction"},"next":{"title":"syncSpecificTransactions","permalink":"/docs/Mutations/Integrations/syncSpecificTransactions"}}');var r=e(4848),s=e(8453);const a={},c="syncIntegration",o={},d=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function l(n){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"syncintegration",children:"syncIntegration"})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Synchronizes a specified integration within a given time period."}),"\n",(0,r.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-graphql",children:"schema {\n  mutation: SyncIntegrationMutation\n}\n\nmutation {\n  syncIntegration(endDate: DateTime, integrationName: String, startDate: DateTime): SyncIntegration\n}\n\ntype SyncIntegration {\n  status: String\n}\n\nscalar DateTime\n"})}),"\n",(0,r.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"endDate"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{children:"End date for sync integration"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"integrationName"}),(0,r.jsx)(t.td,{children:"String"}),(0,r.jsx)(t.td,{children:"Name of the integration to sync"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"startDate"}),(0,r.jsx)(t.td,{children:"DateTime"}),(0,r.jsx)(t.td,{children:"Start date for sync integration"})]})]})]})]})}function h(n={}){const{wrapper:t}={...(0,s.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}}}]);