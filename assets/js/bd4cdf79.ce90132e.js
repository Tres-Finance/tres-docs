"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5480],{7721:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"Mutations/Internal Account / Wallets/updateInternalAccount","title":"updateInternalAccount","description":"Description","source":"@site/docs/Mutations/Internal Account / Wallets/updateInternalAccount.md","sourceDirName":"Mutations/Internal Account / Wallets","slug":"/Mutations/Internal Account / Wallets/updateInternalAccount","permalink":"/tres-docs/docs/Mutations/Internal Account / Wallets/updateInternalAccount","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"updateBatchInternalAccounts","permalink":"/tres-docs/docs/Mutations/Internal Account / Wallets/updateBatchInternalAccounts"},"next":{"title":"createNotificationRule","permalink":"/tres-docs/docs/Mutations/Notification Center/createNotificationRule"}}');var c=e(4848),a=e(8453);const s={},i="updateInternalAccount",l={},o=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(n){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"updateinternalaccount",children:"updateInternalAccount"})}),"\n",(0,c.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,c.jsx)(t.p,{children:"Updates an internal account's information."}),"\n",(0,c.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-graphql",children:"schema {\n  mutation: UpdateInternalAccountMutation\n}\n\nmutation {\n  updateInternalAccount(\n    description: String\n    enforceCollectTransactions: Boolean\n    identifier: String!\n    name: String!\n    parentPlatform: ParentPlatform\n    platformKeys: JSONString\n    userType: ParentPlatform\n  ): UpdateInternalAccountMutation\n}\n\nenum ParentPlatform {\n  EOS\n  ONTOLOGY\n  SUBSTRATE\n  KASPA\n  FILECOIN\n  BITGO\n  ETHEREUM\n  BITCOIN\n  SOLANA\n  BINANCE_EXCHANGE\n  BINANCE_EXCHANGE_TR\n  KRAKEN\n  COINBASE_PRIME\n  COINBASE\n  COINBASE_COMMERCE\n  # ... other enum values ...\n}\n\nscalar JSONString\n"})}),"\n",(0,c.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Name"}),(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"description"}),(0,c.jsx)(t.td,{children:"String"}),(0,c.jsx)(t.td,{children:"Description of the internal account"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"enforceCollectTransactions"}),(0,c.jsx)(t.td,{children:"Boolean"}),(0,c.jsx)(t.td,{children:"Flag to enforce transaction collection"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"identifier"}),(0,c.jsx)(t.td,{children:"String!"}),(0,c.jsx)(t.td,{children:"Required unique identifier for the account"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"name"}),(0,c.jsx)(t.td,{children:"String!"}),(0,c.jsx)(t.td,{children:"Required name for the internal account"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"parentPlatform"}),(0,c.jsx)(t.td,{children:"ParentPlatform"}),(0,c.jsx)(t.td,{children:"Parent platform enumeration value"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"platformKeys"}),(0,c.jsx)(t.td,{children:"JSONString"}),(0,c.jsx)(t.td,{children:"Platform specific keys in JSON format"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:"userType"}),(0,c.jsx)(t.td,{children:"ParentPlatform"}),(0,c.jsx)(t.td,{children:"Type of user based on parent platform"})]})]})]})]})}function u(n={}){const{wrapper:t}={...(0,a.R)(),...n.components};return t?(0,c.jsx)(t,{...n,children:(0,c.jsx)(d,{...n})}):d(n)}},8453:(n,t,e)=>{e.d(t,{R:()=>s,x:()=>i});var r=e(6540);const c={},a=r.createContext(c);function s(n){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function i(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:s(n.components),r.createElement(a.Provider,{value:t},n.children)}}}]);