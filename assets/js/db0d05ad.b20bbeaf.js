"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8399],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var s=n(6540);const a={},r=s.createContext(a);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(r.Provider,{value:t},e.children)}},9957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Queries/Asset Balances/getStatelessTokenBalance","title":"getStatelessTokenBalance","description":"Description","source":"@site/docs/Queries/Asset Balances/getStatelessTokenBalance.md","sourceDirName":"Queries/Asset Balances","slug":"/Queries/Asset Balances/getStatelessTokenBalance","permalink":"/docs/Queries/Asset Balances/getStatelessTokenBalance","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"asset","permalink":"/docs/Queries/Asset Balances/asset"},"next":{"title":"getStatelessWalletsPositions","permalink":"/docs/Queries/Asset Balances/getStatelessWalletsPositions"}}');var a=n(4848),r=n(8453);const l={},i="getStatelessTokenBalance",c={},o=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"getstatelesstokenbalance",children:"getStatelessTokenBalance"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves the balance of a stateless token for specified wallets on a given platform."}),"\n",(0,a.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"query {\n  getStatelessTokenBalance(walletIdentifiers: [String]!, platform: Platform!, assetIdentifier: String!, timestamp: DateTime, blockNumber: Int, includeSubAccounts: Boolean): [AssetBalanceChildObjectType]\n}\n\ntype AssetBalanceChildObjectType {\n  assetIdentifier: String!\n  walletIdentifier: String!\n  state: BalanceState!\n  errorCode: StatelessBalanceErrorCodes!\n  originalAmount: Decimal\n  amount: Decimal\n  symbol: String\n  balanceSource: StatlessBalanceSource!\n}\n\nenum BalanceState {\n  LOCKED\n  CLAIMABLE\n  UNLOCKING\n  LIQUID\n  WALLET\n  VIRTUAL\n  CLAIMED\n  WITHDRAWN\n  UNDER_DELEGATION\n  FAILED\n}\n\nenum StatelessBalanceErrorCodes {\n  SUCCESS\n  BALANCE_NOT_SUPPORTED\n  UNKNOWN_ERROR\n  ASSET_NOT_FOUND\n  INTERNAL_ACCOUNT_NOT_FOUND\n  RUNNING_BALANCE_NOT_RECONCILED\n}\n\nscalar Decimal\n\nenum StatlessBalanceSource {\n  RUNNING_BALNACE\n  ONCHAIN\n  NONE\n}\n"})}),"\n",(0,a.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"walletIdentifiers"}),(0,a.jsx)(t.td,{children:"[String]!"}),(0,a.jsx)(t.td,{children:"Array of wallet identifiers to query balances for"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"platform"}),(0,a.jsx)(t.td,{children:"Platform!"}),(0,a.jsx)(t.td,{children:"Platform to query balances from"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"assetIdentifier"}),(0,a.jsx)(t.td,{children:"String!"}),(0,a.jsx)(t.td,{children:"Identifier of the asset to query balance for"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"timestamp"}),(0,a.jsx)(t.td,{children:"DateTime"}),(0,a.jsx)(t.td,{children:"Optional timestamp to query balance at"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"blockNumber"}),(0,a.jsx)(t.td,{children:"Int"}),(0,a.jsx)(t.td,{children:"Optional block number to query balance at"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"includeSubAccounts"}),(0,a.jsx)(t.td,{children:"Boolean"}),(0,a.jsx)(t.td,{children:"Optional flag to include sub-accounts in balance query"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);