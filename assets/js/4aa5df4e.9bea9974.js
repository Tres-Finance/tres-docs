"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6963],{8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var i=n(6540);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},8579:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Queries/Staking Data/stakingData","title":"stakingData","description":"Description","source":"@site/docs/Queries/Staking Data/stakingData.md","sourceDirName":"Queries/Staking Data","slug":"/Queries/Staking Data/stakingData","permalink":"/tres-docs/docs/Queries/Staking Data/stakingData","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"stakingYieldRecord","permalink":"/tres-docs/docs/Queries/Report/stakingYieldRecord"},"next":{"title":"stakingYieldOptions","permalink":"/tres-docs/docs/Queries/Staking Data/stakingYieldOptions"}}');var a=n(4848),r=n(8453);const s={},d="stakingData",l={},c=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function o(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"stakingdata",children:"stakingData"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsx)(t.p,{children:"Retrieves staking data for a specific platform and time period."}),"\n",(0,a.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"query {\n  stakingData(platform: Platform!, identifier: String!, start: Date!, end: Date!, assetIdentifier: String, excludeZeroRewards: Boolean, roundDecimals: Boolean, useDb: Boolean, yieldType: StakingYieldType, ignoreMissingDataErrors: Boolean): StakingDataResponseObjectType\n}\n\ntype StakingDataResponseObjectType {\n  data: StakingDataObjectType!\n  platform: Platform!\n  identifier: String!\n  assetIdentifier: String!\n  internalAccountName: String!\n  internalAccountTags: [String]!\n  start: Date!\n  end: Date!\n  totalCount: Int!\n}\n\ntype StakingDataObjectType {\n  summary: [StakingDataEntryObjectType]!\n  byValidator: [StakingDataEntryObjectType]!\n}\n\ntype StakingDataEntryObjectType {\n  start: DateTime!\n  end: DateTime!\n  generatedRewards: Decimal!\n  locked: Decimal\n  claimable: Decimal\n  unlocking: Decimal\n  apr: Decimal\n  stakingLedger: [StakingLedgerObjectType]!\n  validatorIdentifier: String\n  yieldType: StakingYieldType!\n  createdAt: DateTime\n  updatedAt: DateTime\n}\n"})}),"\n",(0,a.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Name"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"platform"}),(0,a.jsx)(t.td,{children:"Platform!"}),(0,a.jsx)(t.td,{children:"Platform identifier for staking data"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"identifier"}),(0,a.jsx)(t.td,{children:"String!"}),(0,a.jsx)(t.td,{children:"Unique identifier for the staking entity"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"start"}),(0,a.jsx)(t.td,{children:"Date!"}),(0,a.jsx)(t.td,{children:"Start date for the staking data query"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"end"}),(0,a.jsx)(t.td,{children:"Date!"}),(0,a.jsx)(t.td,{children:"End date for the staking data query"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"assetIdentifier"}),(0,a.jsx)(t.td,{children:"String"}),(0,a.jsx)(t.td,{children:"Optional asset identifier to filter results"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"excludeZeroRewards"}),(0,a.jsx)(t.td,{children:"Boolean"}),(0,a.jsx)(t.td,{children:"Flag to exclude entries with zero rewards"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"roundDecimals"}),(0,a.jsx)(t.td,{children:"Boolean"}),(0,a.jsx)(t.td,{children:"Flag to round decimal values"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"useDb"}),(0,a.jsx)(t.td,{children:"Boolean"}),(0,a.jsx)(t.td,{children:"Flag to use database for query"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"yieldType"}),(0,a.jsx)(t.td,{children:"StakingYieldType"}),(0,a.jsx)(t.td,{children:"Type of staking yield to filter"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"ignoreMissingDataErrors"}),(0,a.jsx)(t.td,{children:"Boolean"}),(0,a.jsx)(t.td,{children:"Flag to ignore missing data errors"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);