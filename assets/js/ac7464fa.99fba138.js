"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1167],{5001:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Mutations/Integrations/upsertIntegrationAccount","title":"upsertIntegrationAccount","description":"Description","source":"@site/docs/Mutations/Integrations/upsertIntegrationAccount.md","sourceDirName":"Mutations/Integrations","slug":"/Mutations/Integrations/upsertIntegrationAccount","permalink":"/tres-docs/docs/Mutations/Integrations/upsertIntegrationAccount","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"unsyncSpecificTransactions","permalink":"/tres-docs/docs/Mutations/Integrations/unsyncSpecificTransactions"},"next":{"title":"UpsertRule Mutation","permalink":"/tres-docs/docs/Mutations/Integrations/upsertRule"}}');var i=e(4848),s=e(8453);const c={},o="upsertIntegrationAccount",a={},d=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function u(t){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"upsertintegrationaccount",children:"upsertIntegrationAccount"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Creates or updates an integration account with specified details."}),"\n",(0,i.jsx)(n.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"mutation {\n  upsertIntegrationAccount(\n    integrationAccountId: Int\n    integrationId: Int!\n    name: String!\n    type: AccountType!\n    value: String!\n  ): upsertIntegrationAccountMutation\n}\n\ntype upsertIntegrationAccountMutation {\n  isSuccessful: Boolean\n  createdNew: Boolean\n  integrationAccountId: String\n}\n\nenum AccountType {\n  ASSET\n  LIABILITY\n  EQUITY\n  INCOME\n  EXPENSE\n  NETSUITE_CLASS\n  NETSUITE_DEPARTMENT\n  XERO_DEPARTMENT\n  XERO_ENTITY\n  SUBSIDIARY\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"integrationAccountId"}),(0,i.jsx)(n.td,{children:"Int"}),(0,i.jsx)(n.td,{children:"Optional ID for existing integration account"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"integrationId"}),(0,i.jsx)(n.td,{children:"Int!"}),(0,i.jsx)(n.td,{children:"Required ID of the integration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"name"}),(0,i.jsx)(n.td,{children:"String!"}),(0,i.jsx)(n.td,{children:"Required name for the integration account"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"type"}),(0,i.jsx)(n.td,{children:"AccountType!"}),(0,i.jsx)(n.td,{children:"Required type of account from AccountType enum"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"value"}),(0,i.jsx)(n.td,{children:"String!"}),(0,i.jsx)(n.td,{children:"Required value for the integration account"})]})]})]})]})}function l(t={}){const{wrapper:n}={...(0,s.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(u,{...t})}):u(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>c,x:()=>o});var r=e(6540);const i={},s=r.createContext(i);function c(t){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:c(t.components),r.createElement(s.Provider,{value:n},t.children)}}}]);