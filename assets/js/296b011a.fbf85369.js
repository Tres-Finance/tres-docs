"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6643],{8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}},8519:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Queries/getStatelessWalletsPositions","title":"getStatelessWalletsPositions","description":"Description","source":"@site/docs/Queries/getStatelessWalletsPositions.md","sourceDirName":"Queries","slug":"/Queries/getStatelessWalletsPositions","permalink":"/tres-docs/docs/Queries/getStatelessWalletsPositions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Queries/getStatelessWalletsPositions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"ERP Query","permalink":"/tres-docs/docs/Queries/erp"},"next":{"title":"Overview Query","permalink":"/tres-docs/docs/Queries/overviewQuery"}}');var i=n(4848),r=n(8453);const l={},a="getStatelessWalletsPositions",o={},c=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getstatelesswalletspositions",children:"getStatelessWalletsPositions"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Retrieves positions of stateless wallets across various platforms."}),"\n",(0,i.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-graphql",children:"query {\n  getStatelessWalletsPositions(walletIdentifiers: [String]!, platform: Platform!, timestamp: DateTime, application: String, blockNumber: Int): [PositionObjectType]\n}\n\ntype PositionObjectType {\n  walletIdentifier: String!\n  displayName: String!\n  platform: Platform!\n  positionType: PositionType\n  blockNumber: Int\n  blockHeight: Int\n  children: [AssetBalanceChildObjectType]!\n  extras: ExtraPositionDataObjectType\n  id: String!\n}\n\nenum Platform {\n  EOS\n  VANAR\n  ONTOLOGY\n  POLKADOT\n  KUSAMA\n  ACALA\n  # ... [other platform values]\n}\n\nenum PositionType {\n  STAKING\n  DELEGATED_TO_ACCOUNT\n  LP\n  LENDING\n  BORROWING\n  VESTING\n  AIRDROP\n}\n\ntype AssetBalanceChildObjectType {\n  assetIdentifier: String!\n  walletIdentifier: String!\n  state: BalanceState!\n  errorCode: StatelessBalanceErrorCodes!\n  originalAmount: Decimal\n  amount: Decimal\n  symbol: String\n  balanceSource: StatlessBalanceSource!\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"walletIdentifiers"}),(0,i.jsx)(t.td,{children:"[String]!"}),(0,i.jsx)(t.td,{children:"Array of wallet identifiers to query"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"platform"}),(0,i.jsx)(t.td,{children:"Platform!"}),(0,i.jsx)(t.td,{children:"Platform enum value to specify the blockchain platform"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"timestamp"}),(0,i.jsx)(t.td,{children:"DateTime"}),(0,i.jsx)(t.td,{children:"Optional timestamp for the query"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"application"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Optional application identifier"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"blockNumber"}),(0,i.jsx)(t.td,{children:"Int"}),(0,i.jsx)(t.td,{children:"Optional block number to query at specific blockchain height"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);