"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5822],{8453:(s,t,e)=>{e.d(t,{R:()=>i,x:()=>o});var r=e(6540);const n={},a=r.createContext(n);function i(s){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof s?s(t):{...t,...s}}),[t,s])}function o(s){let t;return t=s.disableParentContext?"function"==typeof s.components?s.components(n):s.components||n:i(s.components),r.createElement(a.Provider,{value:t},s.children)}},9151:(s,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Mutations/Transaction/triggerCostBasis","title":"triggerCostBasis","description":"Description","source":"@site/docs/Mutations/Transaction/triggerCostBasis.md","sourceDirName":"Mutations/Transaction","slug":"/Mutations/Transaction/triggerCostBasis","permalink":"/tres-docs/docs/Mutations/Transaction/triggerCostBasis","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Mutations/Transaction/triggerCostBasis.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"startProcessingTxsCsvUrl","permalink":"/tres-docs/docs/Mutations/Transaction/startProcessingTxsCsvUrl"},"next":{"title":"updateTransactionComment","permalink":"/tres-docs/docs/Mutations/Transaction/updateTransactionComment"}}');var n=e(4848),a=e(8453);const i={},o="triggerCostBasis",c={},d=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function l(s){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...s.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"triggercostbasis",children:"triggerCostBasis"})}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Triggers cost basis calculation for specified asset classes."}),"\n",(0,n.jsx)(t.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-graphql",children:"mutation {\n  triggerCostBasis(assetClassIds: [Int]): TriggerCostBasisMutation\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"assetClassIds"}),(0,n.jsx)(t.td,{children:"[Int]"}),(0,n.jsx)(t.td,{children:"Array of asset class IDs to trigger cost basis calculation for"})]})})]})]})}function h(s={}){const{wrapper:t}={...(0,a.R)(),...s.components};return t?(0,n.jsx)(t,{...s,children:(0,n.jsx)(l,{...s})}):l(s)}}}]);