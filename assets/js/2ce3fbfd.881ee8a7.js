"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2304],{8453:(t,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var r=i(6540);const s={},n=r.createContext(s);function o(t){const e=r.useContext(n);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),r.createElement(n.Provider,{value:e},t.children)}},9307:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"Mutations/Commit Visibilty/triggerCommit","title":"triggerCommit","description":"Description","source":"@site/docs/Mutations/Commit Visibilty/triggerCommit.md","sourceDirName":"Mutations/Commit Visibilty","slug":"/Mutations/Commit Visibilty/triggerCommit","permalink":"/tres-docs/docs/Mutations/Commit Visibilty/triggerCommit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Mutations/Commit Visibilty/triggerCommit.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"updateTransactionClassificationRule","permalink":"/tres-docs/docs/Mutations/Classification/updateTransactionClassificationRule"},"next":{"title":"updateCostBasisStrategyByDate","permalink":"/tres-docs/docs/Mutations/Cost Basis/updateCostBasisStrategyByDate"}}');var s=i(4848),n=i(8453);const o={},a="triggerCommit",c={},m=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"triggercommit",children:"triggerCommit"})}),"\n",(0,s.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(e.p,{children:"Triggers a commit action."}),"\n",(0,s.jsx)(e.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:"schema {\n  mutation: TriggerCommitMutation\n}\n\nmutation {\n  triggerCommit: TriggerCommitMutation\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Name"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsx)(e.tbody,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"triggerCommit"}),(0,s.jsx)(e.td,{children:"TriggerCommitMutation"}),(0,s.jsx)(e.td,{children:"Triggers a commit mutation"})]})})]})]})}function l(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}}}]);