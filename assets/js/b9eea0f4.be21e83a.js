"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6187],{8453:(t,n,e)=>{e.d(n,{R:()=>a,x:()=>c});var s=e(6540);const i={},r=s.createContext(i);function a(t){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function c(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),s.createElement(r.Provider,{value:n},t.children)}},9604:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Mutations/Integrations/syncIntegration","title":"syncIntegration","description":"Description","source":"@site/docs/Mutations/Integrations/syncIntegration.md","sourceDirName":"Mutations/Integrations","slug":"/Mutations/Integrations/syncIntegration","permalink":"/tres-docs/docs/Mutations/Integrations/syncIntegration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Mutations/Integrations/syncIntegration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"APIs","previous":{"title":"ignoreTransaction","permalink":"/tres-docs/docs/Mutations/Integrations/ignoreTransaction"},"next":{"title":"syncSpecificTransactions","permalink":"/tres-docs/docs/Mutations/Integrations/syncSpecificTransactions"}}');var i=e(4848),r=e(8453);const a={},c="syncIntegration",o={},d=[{value:"Description",id:"description",level:2},{value:"GraphQL Schema",id:"graphql-schema",level:2},{value:"Arguments",id:"arguments",level:2}];function h(t){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"syncintegration",children:"syncIntegration"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Synchronizes a specified integration within a given time period."}),"\n",(0,i.jsx)(n.h2,{id:"graphql-schema",children:"GraphQL Schema"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:"schema {\n  mutation: SyncIntegrationMutation\n}\n\nmutation {\n  syncIntegration(endDate: DateTime, integrationName: String, startDate: DateTime): SyncIntegration\n}\n\ntype SyncIntegration {\n  status: String\n}\n\nscalar DateTime\n"})}),"\n",(0,i.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"endDate"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{children:"End date for sync integration"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"integrationName"}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Name of the integration to sync"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"startDate"}),(0,i.jsx)(n.td,{children:"DateTime"}),(0,i.jsx)(n.td,{children:"Start date for sync integration"})]})]})]})]})}function l(t={}){const{wrapper:n}={...(0,r.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}}}]);